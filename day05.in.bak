#lang racket

(define test-offsets (vector 0 3 0 1 -3))

(define (find-exit offsets)
  (let loop ((ptr 0) (steps 0))
    (printf "~a ~a~n" offsets ptr)
    (if (or (< ptr 0) (>= ptr (vector-length offsets)))
        steps
        (let ((offset (vector-ref offsets ptr)))
          (vector-set! offsets ptr (add1 (vector-ref offsets ptr)))
          (loop (+ ptr offset) (add1 steps))))))

(find-exit test-offsets)